{"version":3,"sources":["webpack://tetrisEngine/webpack/universalModuleDefinition","webpack://tetrisEngine/webpack/bootstrap","webpack://tetrisEngine/./src/engine.js","webpack://tetrisEngine/./src/game-status.js","webpack://tetrisEngine/./src/index.js","webpack://tetrisEngine/./src/shape.js","webpack://tetrisEngine/./src/tetra-shapes.js"],"names":["Engine","height","width","renderHandle","defaultHeap","additionalShapes","_shapesSet","key","_gameStatus","INIT","_statistic","countShapesFalled","countShapesFalledByType","countLinesReduced","countDoubleLinesReduced","countTrippleLinesReduced","countQuadrupleLinesReduced","_heap","length","y","row","x","push","val","inversedDefaultHeap","slice","reverse","_checkHeapForReduce","state","_renderHandle","_shape","_nextShape","parseInt","countFalledShapesByThisKind","name","PAUSE","_newFigure","WORK","_canShapeMove","position","X","Y","_addShapeToHeap","OVER","newRowForHeap","i","body","cell","areaIndexY","_getAreaIndexYFromShape","areaIndexX","_getAreaIndexXFromShape","class","linesToRemove","isThereEmptySquare","newHeap","indexOf","getRotatedBody","rotate","getRotatedBackBody","rotateBack","shapeX","delta","shapeY","deltaY","deltaX","shapeBody","_isHeapSquare","_getShapeIndexY","_getShapeIndexX","isHeap","isShape","_isShapeSquare","css","_getHeapClass","JSON","stringify","gameStatus","_getBody","shapeName","nextShape","bodyWithAppearance","statistic","ShapeDimension","Shape","shapesSet","Error","_selectNextShape","_calculateProperties","count","selectedShape","prop","Math","random","_calculatePaddings","paddingLeft","paddingRight","paddingTop","paddingBottom","_paddingLeft","_paddingRight","_paddingTop","_paddingBottom","newShape","newRow","module","exports","IShape","ZShape","SShape","LShape","JShape","OShape","TShape"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AAEA;AAEA;;;;IAIqBA,M;;;AAEnB;;;;;;;;;AASA,oBAAkF;AAAA,QAAtEC,MAAsE,uEAA7D,EAA6D;AAAA,QAAzDC,KAAyD,uEAAjD,EAAiD;AAAA,QAA7CC,YAA6C;AAAA,QAA/BC,WAA+B;AAAA,QAAlBC,gBAAkB;;AAAA;;AAChF,QAAGH,KAAK,IAAI,CAAT,IAAcD,MAAM,IAAI,CAA3B,EACE,MAAM,iDAAN;AAEF,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKD,MAAL,GAAcA,MAAd;AAEA,SAAKK,UAAL,GAAkB,EAAlB;;AACA,SAAI,IAAIC,GAAR,IAAe,qDAAf;AACE,WAAKD,UAAL,CAAgBC,GAAhB,IAAuB,qDAAW,CAACA,GAAD,CAAlC;AADF;;AAGA,QAAGF,gBAAH,EACE,KAAI,IAAIE,IAAR,IAAeF,gBAAf;AACE,WAAKC,UAAL,CAAgBC,IAAhB,IAAuBF,gBAAgB,CAACE,IAAD,CAAvC;AADF;AAGF,SAAKC,WAAL,GAAmB,oDAAW,CAACC,IAA/B;AAEA,SAAKC,UAAL,GAAkB;AAChBC,uBAAiB,EAAE,CADH;AAEhBC,6BAAuB,EAAE,EAFT;AAGhBC,uBAAiB,EAAE,CAHH;AAIhBC,6BAAuB,EAAE,CAJT;AAKhBC,8BAAwB,EAAE,CALV;AAMhBC,gCAA0B,EAAE;AANZ,KAAlB;AASA,SAAKC,KAAL,GAAa,EAAb;;AACA,QAAGb,WAAW,IAAIA,WAAW,CAACc,MAA3B,IAAqCd,WAAW,CAAC,CAAD,CAAX,CAAec,MAAvD,EAA+D;AAE7D,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,WAAW,CAACc,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,YAAIC,GAAG,GAAG,EAAV;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKnB,KAAxB,EAA+BmB,CAAC,EAAhC,EAAoC;AAClCD,aAAG,CAACE,IAAJ,CAAS;AACPC,eAAG,EAAE;AADE,WAAT;AAGD;;AACD,aAAKN,KAAL,CAAWK,IAAX,CAAgBF,GAAhB;AACD;;AAED,UAAII,mBAAmB,GAAGpB,WAAW,CAACqB,KAAZ,GAAoBC,OAApB,EAA1B;;AACA,WAAI,IAAIP,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGK,mBAAmB,CAACN,MAAxB,IAAkCC,EAAC,GAAG,KAAKlB,MAA1D,EAAkEkB,EAAC,EAAnE,EAAuE;AACrE,YAAIC,IAAG,GAAGI,mBAAmB,CAACL,EAAD,CAA7B;;AACA,aAAI,IAAIE,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGD,IAAG,CAACF,MAAR,IAAkBG,EAAC,GAAG,KAAKnB,KAA1C,EAAiDmB,EAAC,EAAlD,EAAsD;AACpD,eAAKJ,KAAL,CAAWE,EAAX,EAAcE,EAAd,EAAiBE,GAAjB,GAAuBC,mBAAmB,CAACL,EAAD,CAAnB,CAAuBE,EAAvB,CAAvB;AACD;AACF;AACF;;AAED,SAAKM,mBAAL;;AAEA,QAAGxB,YAAH,EAAiB;AACfA,kBAAY,CAAC,KAAKyB,KAAN,CAAZ;AACA,WAAKC,aAAL,GAAqB1B,YAArB;AACD;AACF;AAED;;;;;;;;iCAIa;AACX,WAAK2B,MAAL,GAAc,KAAKC,UAAL,GAAkB,KAAKA,UAAvB,GAAoC,IAAI,4CAAJ,CAAU,KAAKzB,UAAf,EAA2B0B,QAAQ,CAAC,KAAK9B,KAAL,GAAa,CAAb,GAAiB,CAAlB,CAAnC,EAAyD,KAAKD,MAA9D,CAAlD;AACA,WAAK8B,UAAL,GAAkB,IAAI,4CAAJ,CAAU,KAAKzB,UAAf,EAA2B0B,QAAQ,CAAC,KAAK9B,KAAL,GAAa,CAAb,GAAiB,CAAlB,CAAnC,EAAyD,KAAKD,MAA9D,CAAlB;AAEA,UAAIgC,2BAA2B,GAAG,KAAKvB,UAAL,CAAgBE,uBAAhB,CAAwC,KAAKkB,MAAL,CAAYI,IAApD,CAAlC;AACA,UAAG,CAACD,2BAAJ,EACE,KAAKvB,UAAL,CAAgBE,uBAAhB,CAAwC,KAAKkB,MAAL,CAAYI,IAApD,IAA4D,CAA5D,CADF,KAGE,KAAKxB,UAAL,CAAgBE,uBAAhB,CAAwC,KAAKkB,MAAL,CAAYI,IAApD;AAEF,WAAKxB,UAAL,CAAgBC,iBAAhB;AACD;AAED;;;;;;;4BAIQ;AACN,UAAG,KAAKH,WAAL,KAAqB,oDAAW,CAACC,IAAjC,IAAyC,KAAKD,WAAL,KAAqB,oDAAW,CAAC2B,KAA7E,EACE,OAAO,KAAP;;AAEF,UAAG,KAAK3B,WAAL,KAAqB,oDAAW,CAACC,IAApC,EAA0C;AACxC,aAAK2B,UAAL;;AACA,aAAK5B,WAAL,GAAmB,oDAAW,CAAC6B,IAA/B;AACA,eAAO,IAAP;AACD;;AAED,UAAG,KAAK7B,WAAL,KAAqB,oDAAW,CAAC2B,KAApC,EAA2C;AACzC,aAAK3B,WAAL,GAAmB,oDAAW,CAAC6B,IAA/B;AACD;AACF;AAED;;;;;;;4BAIQ;AACN,cAAO,KAAK7B,WAAZ;AACA,aAAK,oDAAW,CAAC6B,IAAjB;AACE,eAAK7B,WAAL,GAAmB,oDAAW,CAAC2B,KAA/B;AACA;;AACF,aAAK,oDAAW,CAACA,KAAjB;AACE,eAAK3B,WAAL,GAAmB,oDAAW,CAAC6B,IAA/B;AACA;AANF;AAQD;;;+BAEU;AACT,UAAG,KAAK7B,WAAL,KAAqB,oDAAW,CAAC6B,IAApC,EACE;AAEF,UAAG,CAAC,KAAKC,aAAL,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAAJ,EACE;AAEF,WAAKR,MAAL,CAAYS,QAAZ,CAAqBC,CAArB;;AACA,WAAKX,aAAL,CAAmB,KAAKD,KAAxB;AACD;;;gCAEW;AACV,UAAG,KAAKpB,WAAL,KAAqB,oDAAW,CAAC6B,IAApC,EACE;AAEF,UAAG,CAAC,KAAKC,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,CAAJ,EACE;AAEF,WAAKR,MAAL,CAAYS,QAAZ,CAAqBC,CAArB;;AACA,WAAKX,aAAL,CAAmB,KAAKD,KAAxB;AACD;;;6BAEQ;AACP,UAAG,KAAKpB,WAAL,KAAqB,oDAAW,CAAC6B,IAApC,EACE;AAEF,UAAG,CAAC,KAAKC,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,CAAJ,EACE;AAEF,WAAKR,MAAL,CAAYS,QAAZ,CAAqBE,CAArB;;AACA,WAAKZ,aAAL,CAAmB,KAAKD,KAAxB;AACD;;;+BAEU;AACT,UAAG,KAAKpB,WAAL,KAAqB,oDAAW,CAAC6B,IAApC,EACE;;AAEF,UAAG,CAAC,KAAKC,aAAL,CAAmB,CAAC,CAApB,EAAuB,CAAvB,CAAJ,EAA+B;AAC7B,YAAG,CAAC,KAAKI,eAAL,EAAJ,EAA4B;AAC1B,eAAKlC,WAAL,GAAmB,oDAAW,CAACmC,IAA/B;;AACA,eAAKd,aAAL,CAAmB,KAAKD,KAAxB;AACD;;AACD;AACD;;AAGD,WAAKE,MAAL,CAAYS,QAAZ,CAAqBE,CAArB;;AACA,WAAKZ,aAAL,CAAmB,KAAKD,KAAxB;AACD;;;sCAEiB;AAChB,UAAIgB,aAAa,GAAG,EAApB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAK3C,KAAxB,EAA+B2C,CAAC,EAAhC;AACED,qBAAa,CAACtB,IAAd,CAAmB;AACjBC,aAAG,EAAE;AADY,SAAnB;AADF;;AAKA,WAAI,IAAIJ,CAAC,GAAG,qDAAc,GAAG,CAA7B,EAAgCA,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,YAAIC,GAAG,GAAG,KAAKU,MAAL,CAAYgB,IAAZ,CAAiB3B,CAAjB,CAAV;;AACA,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,qDAAnB,EAAmCA,CAAC,EAApC,EAAwC;AACtC,cAAI0B,IAAI,GAAG3B,GAAG,CAACC,CAAD,CAAd;;AACA,cAAG0B,IAAH,EAAS;AACP,gBAAIC,UAAU,GAAG,KAAKC,uBAAL,CAA6B9B,CAA7B,CAAjB;;AAEA,gBAAG6B,UAAU,IAAI,KAAK/C,MAAtB,EAA8B;AAC5B;AACA,qBAAO,KAAP;AACD;;AAED,mBAAM+C,UAAU,IAAI,KAAK/B,KAAL,CAAWC,MAA/B,EAAuC;AACrC,mBAAKD,KAAL,CAAWK,IAAX,CAAgBsB,aAAa,CAACnB,KAAd,EAAhB;AACD;;AAED,gBAAIyB,UAAU,GAAG,KAAKC,uBAAL,CAA6B9B,CAA7B,CAAjB;;AACA,iBAAKJ,KAAL,CAAW+B,UAAX,EAAuBE,UAAvB,IAAqC;AACnC3B,iBAAG,EAAE,CAD8B;AAEnC6B,mBAAK,EAAE,KAAKtB,MAAL,CAAYI;AAFgB,aAArC;AAID;AACF;AACF;;AAED,WAAKP,mBAAL;;AAEA,WAAKS,UAAL;;AACA,WAAKP,aAAL,CAAmB,KAAKD,KAAxB;;AAEA,aAAO,IAAP;AACD;;;0CAEqB;AACpB,UAAIyB,aAAa,GAAG,EAApB;;AACA,WAAI,IAAIlC,CAAC,GAAG,KAAKF,KAAL,CAAWC,MAAX,GAAoB,CAAhC,EAAmCC,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;AAC9C,YAAIC,GAAG,GAAG,KAAKH,KAAL,CAAWE,CAAX,CAAV;AACA,YAAImC,kBAAkB,GAAG,KAAzB;;AACA,aAAI,IAAIjC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,GAAG,CAACF,MAAvB,EAA+BG,CAAC,EAAhC,EAAoC;AAClC,cAAG,CAAC,KAAKJ,KAAL,CAAWE,CAAX,EAAcE,CAAd,EAAiBE,GAArB,EAA0B;AACxB+B,8BAAkB,GAAG,IAArB;AACA;AACD;AACF;;AAED,YAAG,CAACA,kBAAJ,EACED,aAAa,CAAC/B,IAAd,CAAmBH,CAAnB;AACH;;AAED,UAAIoC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIpC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKF,KAAL,CAAWC,MAA/B,EAAuCC,GAAC,EAAxC,EAA4C;AAC1C,YAAGkC,aAAa,CAACG,OAAd,CAAsBrC,GAAtB,MAA6B,CAAC,CAAjC,EACEoC,OAAO,CAACjC,IAAR,CAAa,KAAKL,KAAL,CAAWE,GAAX,CAAb;AACH;;AAED,WAAKT,UAAL,CAAgBG,iBAAhB,IAAqCwC,aAAa,CAACnC,MAAnD;;AACA,cAAOmC,aAAa,CAACnC,MAArB;AACA,aAAK,CAAL;AACE,eAAKR,UAAL,CAAgBI,uBAAhB;AACA;;AACF,aAAK,CAAL;AACE,eAAKJ,UAAL,CAAgBK,wBAAhB;AACA;;AACF,aAAK,CAAL;AACE,eAAKL,UAAL,CAAgBM,0BAAhB;AACA;AATF;;AAYA,WAAKC,KAAL,GAAasC,OAAb;AACD;;;6BAEQ;AACP,UAAG,KAAK/C,WAAL,KAAqB,oDAAW,CAAC6B,IAApC,EACE;AAEF,UAAG,CAAC,KAAKC,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKR,MAAL,CAAY2B,cAAZ,EAAzB,CAAJ,EACE;;AAEF,WAAK3B,MAAL,CAAY4B,MAAZ;;AACA,WAAK7B,aAAL,CAAmB,KAAKD,KAAxB;AACD;;;iCAEY;AACX,UAAG,KAAKpB,WAAL,KAAqB,oDAAW,CAAC6B,IAApC,EACE;AAEF,UAAG,CAAC,KAAKC,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKR,MAAL,CAAY6B,kBAAZ,EAAzB,CAAJ,EACE;;AAEF,WAAK7B,MAAL,CAAY8B,UAAZ;;AACA,WAAK/B,aAAL,CAAmB,KAAKD,KAAxB;AACD;;;oCAEeP,C,EAAG;AACjB,aAAOA,CAAC,GAAG,KAAKS,MAAL,CAAYS,QAAZ,CAAqBC,CAAhC;AACD;;;oCAEerB,C,EAAG;AACjB,aAAO,KAAKW,MAAL,CAAYS,QAAZ,CAAqBE,CAArB,IAA0B,qDAAc,GAAG,CAA3C,IAAgDtB,CAAvD;AACD;;;4CAEuB0C,M,EAAmB;AAAA,UAAXC,KAAW,uEAAH,CAAG;AACzC,aAAOD,MAAM,GAAG,KAAK/B,MAAL,CAAYS,QAAZ,CAAqBC,CAA9B,GAAkCsB,KAAzC;AACD;;;4CAEuBC,M,EAAmB;AAAA,UAAXD,KAAW,uEAAH,CAAG;AACzC,aAAO,KAAKhC,MAAL,CAAYS,QAAZ,CAAqBE,CAArB,IAA0B,qDAAc,GAAG,CAA3C,IAAgDsB,MAAhD,GAAyDD,KAAhE;AACD;AAED;;;;;;;;;;;;kCAScE,M,EAAQC,M,EAAQC,S,EAAW;AACvC,UAAG,CAACA,SAAJ,EACEA,SAAS,GAAG,KAAKpC,MAAL,CAAYgB,IAAxB;;AAEF,WAAI,IAAI3B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG+C,SAAS,CAAChD,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACxC,YAAIC,GAAG,GAAG8C,SAAS,CAAC/C,CAAD,CAAnB;;AACA,YAAI6B,UAAU,GAAG,KAAKC,uBAAL,CAA6B9B,CAA7B,EAAgC6C,MAAhC,CAAjB;;AAEA,aAAI,IAAI3C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,GAAG,CAACF,MAAvB,EAA+BG,CAAC,EAAhC,EAAoC;AAClC,cAAI0B,IAAI,GAAG3B,GAAG,CAACC,CAAD,CAAd;;AACA,cAAG0B,IAAH,EAAS;AACP,gBAAIG,UAAU,GAAG,KAAKC,uBAAL,CAA6B9B,CAA7B,EAAgC4C,MAAhC,CAAjB,CADO,CAGP;;;AACA,gBAAGjB,UAAU,GAAG,CAAb,IAAkBE,UAAU,GAAG,CAA/B,IAAoCA,UAAU,IAAI,KAAKhD,KAA1D,EACE,OAAO,KAAP;AAEF,gBAAG,KAAKiE,aAAL,CAAmBnB,UAAnB,EAA+BE,UAA/B,CAAH,EACE,OAAO,KAAP;AACH;AACF;AACF;;AAED,aAAO,IAAP;AACD;;;mCAEc/B,C,EAAGE,C,EAAG;AACnB,UAAG,CAAC,KAAKS,MAAN,IAAgB,CAAC,KAAKA,MAAL,CAAYgB,IAAhC,EACE,OAAO,KAAP;;AACF,UAAI1B,GAAG,GAAG,KAAKU,MAAL,CAAYgB,IAAZ,CAAiB,KAAKsB,eAAL,CAAqBjD,CAArB,CAAjB,CAAV;;AACA,aAAOC,GAAG,IAAIA,GAAG,CAAC,KAAKiD,eAAL,CAAqBhD,CAArB,CAAD,CAAjB;AACD;;;kCAEaF,C,EAAGE,C,EAAG;AAClB,UAAG,CAAC,KAAKJ,KAAT,EACE,OAAO,KAAP;AAEF,aAAO,KAAKA,KAAL,CAAWE,CAAX,KAAiB,KAAKF,KAAL,CAAWE,CAAX,EAAcE,CAAd,EAAiBE,GAAzC;AACD;;;kCAEaJ,C,EAAGE,C,EAAG;AAClB,UAAG,CAAC,KAAKJ,KAAT,EACE;AAEF,UAAG,CAAC,KAAKA,KAAL,CAAWE,CAAX,CAAD,IAAkB,CAAC,KAAKF,KAAL,CAAWE,CAAX,EAAcE,CAAd,EAAiBE,GAAvC,EACE;AAEF,aAAO,KAAKN,KAAL,CAAWE,CAAX,EAAcE,CAAd,EAAiB+B,KAAxB;AACD;;;+BAEU;AACT,UAAIN,IAAI,GAAG,EAAX;;AACA,WAAK,IAAI3B,CAAC,GAAG,KAAKlB,MAAL,GAAc,CAA3B,EAA8BkB,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,YAAIC,GAAG,GAAG,EAAV;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnB,KAAzB,EAAgCmB,CAAC,EAAjC,EAAqC;AACnC,cAAIiD,MAAM,GAAG,KAAKH,aAAL,CAAmBhD,CAAnB,EAAsBE,CAAtB,CAAb;;AACA,cAAIkD,OAAO,GAAG,KAAKC,cAAL,CAAoBrD,CAApB,EAAuBE,CAAvB,CAAd;;AACA,cAAIE,GAAG,GAAG+C,MAAM,GAAG,CAAH,GAAOC,OAAO,GAAG,CAAH,GAAO,CAArC;;AAEA,cAAG,CAACA,OAAD,IAAY,CAACD,MAAhB,EAAwB;AACtBlD,eAAG,CAACE,IAAJ,CAAS,CAAT;AACD,WAFD,MAGK;AACHF,eAAG,CAACE,IAAJ,CAAS;AACPC,iBAAG,EAAEA,GADE;AAEPkD,iBAAG,EAAE,CACHF,OAAO,GAAG,OAAH,GAAa,IADjB,EAEHD,MAAM,GAAG,MAAH,GAAY,IAFf,EAGHC,OAAO,GAAG,KAAKzC,MAAL,CAAYI,IAAZ,GAAmB,EAAtB,GAA2B,IAH/B,EAIHoC,MAAM,GAAG,KAAKI,aAAL,CAAmBvD,CAAnB,EAAsBE,CAAtB,CAAH,GAA8B,IAJjC;AAFE,aAAT;AASD;AACF;;AACDyB,YAAI,CAACxB,IAAL,CAAUF,GAAV;AAED;;AACD,aAAO0B,IAAP;AACD;;;wBAEW;AACV,aAAO6B,IAAI,CAACC,SAAL,CAAe;AACpBC,kBAAU,EAAE,KAAKrE,WADG;AAEpBsC,YAAI,EAAE,KAAKgC,QAAL,EAFc;AAGpBC,iBAAS,EAAE,KAAKjD,MAAL,GAAc,KAAKA,MAAL,CAAYI,IAA1B,GAAiC,IAHxB;AAIpB8C,iBAAS,EAAE;AACT9C,cAAI,EAAE,KAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBG,IAAlC,GAAyC,IADtC;AAETY,cAAI,EAAE,KAAKf,UAAL,GAAkB,KAAKA,UAAL,CAAgBkD,kBAAlC,GAAuD;AAFpD,SAJS;AAQpBC,iBAAS,EAAE,KAAKxE;AARI,OAAf,CAAP;AAUD;;;;;;;;;;;;;;;;;;ACzYH;AAAA;;;;;;;;AAQA,+DAAe;AACbD,MAAI,EAAE,CADO;AAEb4B,MAAI,EAAE,CAFO;AAGbF,OAAK,EAAE,CAHM;AAIbQ,MAAI,EAAE;AAJO,CAAf,E;;;;;;;;;;;;;;;;;;;ACRA;AACA;;;;;;;;;;;;;;;;;;ACDA;;;AAGA,IAAMwC,cAAc,GAAG,CAAvB;AAEA;;;;IAGMC,K;;;AACJ,iBAAYC,SAAZ,EAAsC;AAAA,QAAf7C,CAAe,uEAAX,CAAW;AAAA,QAARC,CAAQ,uEAAJ,EAAI;;AAAA;;AACpC,QAAG,CAAC4C,SAAJ,EACE,MAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AAEF,SAAKxD,MAAL,GAAc,KAAKyD,gBAAL,CAAsBF,SAAtB,CAAd;AAEA,SAAK9C,QAAL,GAAgB;AACdC,OAAC,EAAEA,CADW;AAEdC,OAAC,EAAEA;AAFW,KAAhB;;AAKA,SAAK+C,oBAAL;AACD;AAED;;;;;;;;;;qCAMiBH,S,EAAW;AAC1B,UAAII,KAAK,GAAG,CAAZ;AACA,UAAIC,aAAJ;;AACA,WAAK,IAAIC,IAAT,IAAiBN,SAAjB,EAA4B;AAC1B,YAAIO,IAAI,CAACC,MAAL,KAAgB,IAAI,EAAEJ,KAA1B,EACEC,aAAa,GAAGC,IAAhB;AACH;;AAED,WAAKzD,IAAL,GAAYwD,aAAZ;AAEA,aAAOL,SAAS,CAACK,aAAD,CAAhB;AACD;AAED;;;;;;;;2CAKuB;AACrB,WAAKI,kBAAL;AACD;AAED;;;;;;;yCAIqB;AACnB,UAAIC,WAAW,GAAGZ,cAAlB;AACA,UAAIa,YAAY,GAAGb,cAAnB;AACA,UAAIc,UAAU,GAAG,CAAC,CAAlB;AACA,UAAIC,aAAa,GAAG,CAAC,CAArB;;AAEA,WAAK,IAAI/E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,cAApB,EAAoChE,CAAC,EAArC,EAAyC;AACvC,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,cAApB,EAAoC9D,CAAC,EAArC,EAAyC;AACvC,cAAI,KAAKS,MAAL,CAAYX,CAAZ,EAAeE,CAAf,CAAJ,EAAuB;AACrB,gBAAI0E,WAAW,GAAG1E,CAAlB,EACE0E,WAAW,GAAG1E,CAAd;AAEF,gBAAI4E,UAAU,GAAG,CAAjB,EACEA,UAAU,GAAG9E,CAAb;AACH;AACF;AACF;;AAED,WAAK,IAAIA,EAAC,GAAGgE,cAAc,GAAG,CAA9B,EAAiChE,EAAC,IAAI,CAAtC,EAAyCA,EAAC,EAA1C,EAA8C;AAC5C,aAAK,IAAIE,EAAC,GAAG8D,cAAc,GAAG,CAA9B,EAAiC9D,EAAC,IAAI,CAAtC,EAAyCA,EAAC,EAA1C,EAA8C;AAC5C,cAAI,KAAKS,MAAL,CAAYX,EAAZ,EAAeE,EAAf,CAAJ,EAAuB;AACrB,gBAAI2E,YAAY,GAAGb,cAAc,GAAG,CAAjB,GAAqB9D,EAAxC,EACE2E,YAAY,GAAGb,cAAc,GAAG,CAAjB,GAAqB9D,EAApC;AAEF,gBAAI6E,aAAa,GAAG,CAApB,EACEA,aAAa,GAAGf,cAAc,GAAG,CAAjB,GAAqBhE,EAArC;AACH;AACF;AACF;;AAED,WAAKgF,YAAL,GAAoBJ,WAApB;AACA,WAAKK,aAAL,GAAqBJ,YAArB;AACA,WAAKK,WAAL,GAAmBJ,UAAnB;AACA,WAAKK,cAAL,GAAsBJ,aAAtB;AACD;AAED;;;;;;;;6BAKS;AACP,WAAKpE,MAAL,GAAc,KAAK2B,cAAL,EAAd;;AACA,WAAK+B,oBAAL;AACD;;;qCAEgB;AACf,UAAIe,QAAQ,GAAG,EAAf;;AAEA,WAAK,IAAIlF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,cAApB,EAAoC9D,CAAC,EAArC,EAAyC;AACvC,YAAImF,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIrF,CAAC,GAAGgE,cAAc,GAAG,CAA9B,EAAiChE,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC5CqF,gBAAM,CAAClF,IAAP,CAAY,KAAKQ,MAAL,CAAYX,CAAZ,EAAeE,CAAf,CAAZ;AACD;;AACDkF,gBAAQ,CAACjF,IAAT,CAAckF,MAAd;AACD;;AAED,aAAOD,QAAP;AACD;AAED;;;;;;;;iCAKa;AACX,WAAKzE,MAAL,GAAc,KAAK6B,kBAAL,EAAd;;AACA,WAAK6B,oBAAL;AACD;;;yCAEoB;AACnB,UAAIe,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIlF,CAAC,GAAG8D,cAAc,GAAG,CAA9B,EAAiC9D,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC5C,YAAImF,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIrF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,cAApB,EAAoChE,CAAC,EAArC,EAAyC;AACvCqF,gBAAM,CAAClF,IAAP,CAAY,KAAKQ,MAAL,CAAYX,CAAZ,EAAeE,CAAf,CAAZ;AACD;;AACDkF,gBAAQ,CAACjF,IAAT,CAAckF,MAAd;AACD;;AAED,aAAOD,QAAP;AACD;AAED;;;;;;;wBAIW;AACT,aAAO,KAAKzE,MAAZ;AACD;;;wBAEwB;AACvB,UAAIgB,IAAI,GAAG,EAAX;;AAEA,WAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,cAApB,EAAoC9D,CAAC,EAArC,EAAyC;AACvC,YAAImF,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIrF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,cAApB,EAAoChE,CAAC,EAArC,EAAyC;AACvCqF,gBAAM,CAAClF,IAAP,CAAY;AACVC,eAAG,EAAE,KAAKO,MAAL,CAAYX,CAAZ,EAAeE,CAAf,CADK;AAEVoD,eAAG,EAAE,KAAK3C,MAAL,CAAYX,CAAZ,EAAeE,CAAf,IAAoB,WAAW,KAAKa,IAApC,GAA2C;AAFtC,WAAZ;AAID;;AACDY,YAAI,CAACxB,IAAL,CAAUkF,MAAV;AACD;;AAED,aAAO1D,IAAP;AACD;AAED;;;;;;;wBAIiB;AACf,aAAO,KAAKuD,WAAZ;AACD;AAED;;;;;;;wBAIoB;AAClB,aAAO,KAAKC,cAAZ;AACD;AAED;;;;;;;wBAImB;AACjB,aAAO,KAAKF,aAAZ;AACD;AAED;;;;;;;wBAIkB;AAChB,aAAO,KAAKD,YAAZ;AACD;;;;;;AAGHM,MAAM,CAACC,OAAP,GAAiB;AACftB,OAAK,EAALA,KADe;AAEfD,gBAAc,EAAdA;AAFe,CAAjB,C;;;;;;;;;;;;;ACpMA,+DAAe;AACbwB,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM,CADK;AAQbC,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM,CARK;AAebC,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM,CAfK;AAsBbC,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM,CAtBK;AA6BbC,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM,CA7BK;AAoCbC,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM,CApCK;AA2CbC,QAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADM,EAEN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFM,EAGN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHM,EAIN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAJM,EAKN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CALM;AA3CK,CAAf,E","file":"tetris-engine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tetrisEngine\"] = factory();\n\telse\n\t\troot[\"tetrisEngine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { Shape, ShapeDimension } from './shape'\nimport GAME_STATUS from './game-status'\n\nimport tetraShapes from './tetra-shapes'\n\n/**\n * Implements the engine of a game\n */\n\nexport default class Engine {\n\n  /**\n   * Initializing new area\n   * @param {number} height is the width of the field of the game in squares\n   * @param {number} width is the height of the field of the game in squares\n   * @param {function} renderHandle The method that will be runned every time\n   *                   when game state will be changed. Receives game render data.\n   * @param {Array} defaultHeap is a default heap for a game\n   * @param {Object} additionalShapes is additionalShapes for a custom game\n   */\n  constructor(height = 20, width = 15, renderHandle, defaultHeap, additionalShapes) {\n    if(width <= 0 || height <= 0)\n      throw 'Size parameters of the game field are incorrect'\n\n    this.width = width\n    this.height = height\n\n    this._shapesSet = {}\n    for(let key in tetraShapes)\n      this._shapesSet[key] = tetraShapes[key]\n\n    if(additionalShapes)\n      for(let key in additionalShapes)\n        this._shapesSet[key] = additionalShapes[key]\n\n    this._gameStatus = GAME_STATUS.INIT\n\n    this._statistic = {\n      countShapesFalled: 0,\n      countShapesFalledByType: {},\n      countLinesReduced: 0,\n      countDoubleLinesReduced: 0,\n      countTrippleLinesReduced: 0,\n      countQuadrupleLinesReduced: 0\n    }\n\n    this._heap = []\n    if(defaultHeap && defaultHeap.length && defaultHeap[0].length) {\n\n      for(let y = 0; y < defaultHeap.length; y++) {\n        let row = []\n        for(let x = 0; x < this.width; x++) {\n          row.push({\n            val: 0\n          })\n        }\n        this._heap.push(row)\n      }\n\n      let inversedDefaultHeap = defaultHeap.slice().reverse()\n      for(let y = 0; y < inversedDefaultHeap.length && y < this.height; y++) {\n        let row = inversedDefaultHeap[y]\n        for(let x = 0; x < row.length && x < this.width; x++) {\n          this._heap[y][x].val = inversedDefaultHeap[y][x]\n        }\n      }\n    }\n\n    this._checkHeapForReduce()\n\n    if(renderHandle) {\n      renderHandle(this.state)\n      this._renderHandle = renderHandle\n    }\n  }\n\n  /**\n   * Creates a new Shape\n   * @returns {void}\n   */\n  _newFigure() {\n    this._shape = this._nextShape ? this._nextShape : new Shape(this._shapesSet, parseInt(this.width / 2 - 3), this.height)\n    this._nextShape = new Shape(this._shapesSet, parseInt(this.width / 2 - 3), this.height)\n\n    let countFalledShapesByThisKind = this._statistic.countShapesFalledByType[this._shape.name]\n    if(!countFalledShapesByThisKind)\n      this._statistic.countShapesFalledByType[this._shape.name] = 1\n    else\n      this._statistic.countShapesFalledByType[this._shape.name]++\n\n    this._statistic.countShapesFalled++\n  }\n\n  /**\n   * Running a game or turn off a pause mode\n   * @returns {void}\n   */\n  start() {\n    if(this._gameStatus !== GAME_STATUS.INIT && this._gameStatus !== GAME_STATUS.PAUSE)\n      return false\n\n    if(this._gameStatus === GAME_STATUS.INIT) {\n      this._newFigure()\n      this._gameStatus = GAME_STATUS.WORK\n      return true\n    }\n\n    if(this._gameStatus === GAME_STATUS.PAUSE) {\n      this._gameStatus = GAME_STATUS.WORK\n    }\n  }\n\n  /**\n   * Turn on a pause mode\n   * @returns {void}\n   */\n  pause() {\n    switch(this._gameStatus) {\n    case GAME_STATUS.WORK:\n      this._gameStatus = GAME_STATUS.PAUSE\n      break\n    case GAME_STATUS.PAUSE:\n      this._gameStatus = GAME_STATUS.WORK\n      break\n    }\n  }\n\n  moveLeft() {\n    if(this._gameStatus !== GAME_STATUS.WORK)\n      return\n\n    if(!this._canShapeMove(0, -1))\n      return\n\n    this._shape.position.X--\n    this._renderHandle(this.state)\n  }\n\n  moveRight() {\n    if(this._gameStatus !== GAME_STATUS.WORK)\n      return\n\n    if(!this._canShapeMove(0, 1))\n      return\n\n    this._shape.position.X++\n    this._renderHandle(this.state)\n  }\n\n  moveUp() {\n    if(this._gameStatus !== GAME_STATUS.WORK)\n      return\n\n    if(!this._canShapeMove(1, 0))\n      return\n\n    this._shape.position.Y++\n    this._renderHandle(this.state)\n  }\n\n  moveDown() {\n    if(this._gameStatus !== GAME_STATUS.WORK)\n      return\n\n    if(!this._canShapeMove(-1, 0)) {\n      if(!this._addShapeToHeap()) {\n        this._gameStatus = GAME_STATUS.OVER\n        this._renderHandle(this.state)\n      }\n      return\n    }\n\n\n    this._shape.position.Y--\n    this._renderHandle(this.state)\n  }\n\n  _addShapeToHeap() {\n    let newRowForHeap = []\n    for(let i = 0; i < this.width; i++)\n      newRowForHeap.push({\n        val: 0\n      })\n\n    for(let y = ShapeDimension - 1; y >= 0; y--) {\n      let row = this._shape.body[y]\n      for(let x = 0; x < ShapeDimension; x++) {\n        let cell = row[x]\n        if(cell) {\n          let areaIndexY = this._getAreaIndexYFromShape(y)\n\n          if(areaIndexY >= this.height) {\n            //game over :)\n            return false\n          }\n\n          while(areaIndexY >= this._heap.length) {\n            this._heap.push(newRowForHeap.slice())\n          }\n\n          let areaIndexX = this._getAreaIndexXFromShape(x)\n          this._heap[areaIndexY][areaIndexX] = {\n            val: 1,\n            class: this._shape.name\n          }\n        }\n      }\n    }\n\n    this._checkHeapForReduce()\n\n    this._newFigure()\n    this._renderHandle(this.state)\n\n    return true\n  }\n\n  _checkHeapForReduce() {\n    let linesToRemove = []\n    for(let y = this._heap.length - 1; y >= 0; y--) {\n      let row = this._heap[y]\n      let isThereEmptySquare = false\n      for(let x = 0; x < row.length; x++) {\n        if(!this._heap[y][x].val) {\n          isThereEmptySquare = true\n          break\n        }\n      }\n\n      if(!isThereEmptySquare)\n        linesToRemove.push(y)\n    }\n\n    let newHeap = []\n    for (let y = 0; y < this._heap.length; y++) {\n      if(linesToRemove.indexOf(y) === -1)\n        newHeap.push(this._heap[y])\n    }\n\n    this._statistic.countLinesReduced += linesToRemove.length\n    switch(linesToRemove.length) {\n    case 2:\n      this._statistic.countDoubleLinesReduced++\n      break\n    case 3:\n      this._statistic.countTrippleLinesReduced++\n      break\n    case 4:\n      this._statistic.countQuadrupleLinesReduced++\n      break\n    }\n\n    this._heap = newHeap\n  }\n\n  rotate() {\n    if(this._gameStatus !== GAME_STATUS.WORK)\n      return\n\n    if(!this._canShapeMove(0, 0, this._shape.getRotatedBody()))\n      return\n\n    this._shape.rotate()\n    this._renderHandle(this.state)\n  }\n\n  rotateBack() {\n    if(this._gameStatus !== GAME_STATUS.WORK)\n      return\n\n    if(!this._canShapeMove(0, 0, this._shape.getRotatedBackBody()))\n      return\n\n    this._shape.rotateBack()\n    this._renderHandle(this.state)\n  }\n\n  _getShapeIndexX(x) {\n    return x - this._shape.position.X\n  }\n\n  _getShapeIndexY(y) {\n    return this._shape.position.Y + (ShapeDimension - 1) - y\n  }\n\n  _getAreaIndexXFromShape(shapeX, delta = 0) {\n    return shapeX + this._shape.position.X + delta\n  }\n\n  _getAreaIndexYFromShape(shapeY, delta = 0) {\n    return this._shape.position.Y + (ShapeDimension - 1) - shapeY + delta\n  }\n\n  /**\n   * Specifies that can a shape move.\n   * If new coordinates of shape overlap with coordinates of heap\n   * or are outside the game area the shape can't move\n   * @param {*} deltaY specifies vertical moving distance\n   * @param {*} deltaX specifies horizontal moving distance\n   * @param {*} shapeBody specifies changed body of a shape, for example rotated body\n   * @returns {Boolean} True - shape can moves id parametrized direction, False - shape cannot move\n   */\n  _canShapeMove(deltaY, deltaX, shapeBody) {\n    if(!shapeBody)\n      shapeBody = this._shape.body\n\n    for(let y = 0; y < shapeBody.length; y++) {\n      let row = shapeBody[y]\n      let areaIndexY = this._getAreaIndexYFromShape(y, deltaY)\n\n      for(let x = 0; x < row.length; x++) {\n        let cell = row[x]\n        if(cell) {\n          let areaIndexX = this._getAreaIndexXFromShape(x, deltaX)\n\n          //check will the shape go over the walls and the ground\n          if(areaIndexY < 0 || areaIndexX < 0 || areaIndexX >= this.width)\n            return false\n\n          if(this._isHeapSquare(areaIndexY, areaIndexX ))\n            return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  _isShapeSquare(y, x) {\n    if(!this._shape || !this._shape.body)\n      return false\n    let row = this._shape.body[this._getShapeIndexY(y)]\n    return row && row[this._getShapeIndexX(x)]\n  }\n\n  _isHeapSquare(y, x) {\n    if(!this._heap)\n      return false\n\n    return this._heap[y] && this._heap[y][x].val\n  }\n\n  _getHeapClass(y, x) {\n    if(!this._heap)\n      return\n\n    if(!this._heap[y] || !this._heap[y][x].val)\n      return\n\n    return this._heap[y][x].class\n  }\n\n  _getBody() {\n    let body = []\n    for (let y = this.height - 1; y >= 0; y--) {\n      let row = []\n      for (let x = 0; x < this.width; x++) {\n        let isHeap = this._isHeapSquare(y, x)\n        let isShape = this._isShapeSquare(y, x)\n        let val = isHeap ? 2 : isShape ? 1 : 0\n\n        if(!isShape && !isHeap) {\n          row.push(0)\n        }\n        else {\n          row.push({\n            val: val,\n            css: [\n              isShape ? 'shape' : null,\n              isHeap ? 'heap' : null,\n              isShape ? this._shape.name + '' : null,\n              isHeap ? this._getHeapClass(y, x) : null\n            ]\n          })\n        }\n      }\n      body.push(row)\n\n    }\n    return body\n  }\n\n  get state() {\n    return JSON.stringify({\n      gameStatus: this._gameStatus,\n      body: this._getBody(),\n      shapeName: this._shape ? this._shape.name : null,\n      nextShape: {\n        name: this._nextShape ? this._nextShape.name : null,\n        body: this._nextShape ? this._nextShape.bodyWithAppearance : null,\n      },\n      statistic: this._statistic\n    })\n  }\n}\n\n","/**\r\n * Enum represents status of a game\r\n *\r\n * INIT - game was not started\r\n * WORK - game is running\r\n * PAUSE - game was temporary stopped\r\n * OVER - game was finished\r\n */\r\nexport default {\r\n  INIT: 0,\r\n  WORK: 1,\r\n  PAUSE: 2,\r\n  OVER: 3\r\n}","import Engine from './engine'\nimport tetraShapes from './tetra-shapes'\n\nexport { Engine, tetraShapes }","/**\n * Max dimension of every shape\n */\nconst ShapeDimension = 5\n\n/**\n * Implements a falling shape\n */\nclass Shape {\n  constructor(shapesSet, X = 5, Y = 12) {\n    if(!shapesSet)\n      throw new Error('Set of shapes was not setted!')\n\n    this._shape = this._selectNextShape(shapesSet)\n\n    this.position = {\n      X: X,\n      Y: Y\n    }\n\n    this._calculateProperties()\n  }\n\n  /**\n      * Selecting next shape from the available set of shapes\n      * @param {Object} shapesSet is set of shapes among that need to select\n      * @returns {Array} next shape from shapesSet\n      * @private\n      */\n  _selectNextShape(shapesSet) {\n    let count = 0\n    let selectedShape\n    for (let prop in shapesSet) {\n      if (Math.random() < 1 / ++count)\n        selectedShape = prop\n    }\n\n    this.name = selectedShape\n\n    return shapesSet[selectedShape]\n  }\n\n  /**\n      * Calculating all properties that change when a shape is rotated\n      * @private\n      * @returns {void}\n      */\n  _calculateProperties() {\n    this._calculatePaddings()\n  }\n\n  /**\n    * Calculating paddings\n    * @returns {void}\n  */\n  _calculatePaddings() {\n    let paddingLeft = ShapeDimension\n    let paddingRight = ShapeDimension\n    let paddingTop = -1\n    let paddingBottom = -1\n\n    for (let y = 0; y < ShapeDimension; y++) {\n      for (let x = 0; x < ShapeDimension; x++) {\n        if (this._shape[y][x]) {\n          if (paddingLeft > x)\n            paddingLeft = x\n\n          if (paddingTop < 0)\n            paddingTop = y\n        }\n      }\n    }\n\n    for (let y = ShapeDimension - 1; y >= 0; y--) {\n      for (let x = ShapeDimension - 1; x >= 0; x--) {\n        if (this._shape[y][x]) {\n          if (paddingRight > ShapeDimension - 1 - x)\n            paddingRight = ShapeDimension - 1 - x\n\n          if (paddingBottom < 0)\n            paddingBottom = ShapeDimension - 1 - y\n        }\n      }\n    }\n\n    this._paddingLeft = paddingLeft\n    this._paddingRight = paddingRight\n    this._paddingTop = paddingTop\n    this._paddingBottom = paddingBottom\n  }\n\n  /**\n      * rotating a shape clockwise\n      * @public\n      * @returns {void}\n      */\n  rotate() {\n    this._shape = this.getRotatedBody()\n    this._calculateProperties()\n  }\n\n  getRotatedBody() {\n    let newShape = []\n\n    for (let x = 0; x < ShapeDimension; x++) {\n      let newRow = []\n      for (let y = ShapeDimension - 1; y >= 0; y--) {\n        newRow.push(this._shape[y][x])\n      }\n      newShape.push(newRow)\n    }\n\n    return newShape\n  }\n\n  /**\n      * rotating a shape counterclockwise\n      * @public\n      * @returns {void}\n      */\n  rotateBack() {\n    this._shape = this.getRotatedBackBody()\n    this._calculateProperties()\n  }\n\n  getRotatedBackBody() {\n    let newShape = []\n    for (let x = ShapeDimension - 1; x >= 0; x--) {\n      let newRow = []\n      for (let y = 0; y < ShapeDimension; y++) {\n        newRow.push(this._shape[y][x])\n      }\n      newShape.push(newRow)\n    }\n\n    return newShape\n  }\n\n  /**\n      * getting actual shape body\n      * @public\n      */\n  get body() {\n    return this._shape\n  }\n\n  get bodyWithAppearance() {\n    let body = []\n\n    for (let x = 0; x < ShapeDimension; x++) {\n      let newRow = []\n      for (let y = 0; y < ShapeDimension; y++) {\n        newRow.push({\n          val: this._shape[y][x],\n          css: this._shape[y][x] ? 'shape ' + this.name : null\n        })\n      }\n      body.push(newRow)\n    }\n\n    return body\n  }\n\n  /**\n      * getting top padding for shape relatively shape's border\n      * @public\n      */\n  get paddingTop() {\n    return this._paddingTop\n  }\n\n  /**\n      * getting bottom padding for shape relatively shape's border\n      * @public\n      */\n  get paddingBottom() {\n    return this._paddingBottom\n  }\n\n  /**\n      * getting right padding for shape relatively shape's border\n      * @public\n      */\n  get paddingRight() {\n    return this._paddingRight\n  }\n\n  /**\n      * getting left padding for shape relatively shape's border\n      * @public\n      */\n  get paddingLeft() {\n    return this._paddingLeft\n  }\n}\n\nmodule.exports = {\n  Shape,\n  ShapeDimension\n}\n","export default {\n  IShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [1, 1, 1, 1, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n  ],\n  ZShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 1, 1, 0, 0],\n    [0, 0, 1, 1, 0],\n    [0, 0, 0, 0, 0],\n  ],\n  SShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 1, 1, 0],\n    [0, 1, 1, 0, 0],\n    [0, 0, 0, 0, 0],\n  ],\n  LShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 0],\n    [0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n  ],\n  JShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 0],\n    [0, 0, 0, 1, 0],\n    [0, 0, 0, 0, 0],\n  ],\n  OShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 1, 1, 0, 0],\n    [0, 1, 1, 0, 0],\n    [0, 0, 0, 0, 0],\n  ],\n  TShape: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 0],\n    [0, 0, 1, 0, 0],\n    [0, 0, 0, 0, 0],\n  ]\n}\n"],"sourceRoot":""}