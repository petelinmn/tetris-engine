{"version":3,"sources":["webpack://tetrisEngine/webpack/universalModuleDefinition","webpack://tetrisEngine/webpack/bootstrap","webpack://tetrisEngine/./src/engine.js","webpack://tetrisEngine/./src/game-status.js","webpack://tetrisEngine/./src/index.js","webpack://tetrisEngine/./src/shape.js","webpack://tetrisEngine/./src/tetra-shapes.js"],"names":["Engine","options","Error","width","height","renderHandle","self","players","stat","_newStatistic","i","length","player","name","_renderHandle","_shapesSet","key","additionalShapes","_gameStatus","INIT","_statistic","_heap","defaultHeap","y","row","x","push","val","inversedDefaultHeap","slice","reverse","_checkHeapForReduce","state","countShapesFalled","countShapesFalledByType","countLinesReduced","countDoubleLinesReduced","countTrippleLinesReduced","countQuadrupleLinesReduced","playerName","shape","nextShape","parseInt","PAUSE","_newFigure","WORK","_canShapeMove","_shape","position","X","Y","_addShapeToHeap","OVER","newRowForHeap","ShapeDimension","body","cell","areaIndexY","_getAreaIndexYFromShape","areaIndexX","_getAreaIndexXFromShape","class","linesToRemove","isThereEmptySquare","newHeap","indexOf","getRotatedBody","rotate","getRotatedBackBody","rotateBack","shapeX","delta","shapeY","deltaY","deltaX","shapeBody","_isHeapSquare","_nextShape","_getShapeIndexY","_getShapeIndexX","isHeap","isShape","_isShapeSquare","newCell","css","heapClass","_getHeapClass","gameStatus","_getBody","shapeName","bodyWithAppearance","statistic","Shape","shapesSet","_selectNextShape","_calculateProperties","count","selectedShape","prop","Math","random","_calculatePaddings","paddingLeft","paddingRight","paddingTop","paddingBottom","_paddingLeft","_paddingRight","_paddingTop","_paddingBottom","newShape","newRow","IShape","ZShape","SShape","LShape","JShape","OShape","TShape"],"mappings":"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","file":"tetris-engine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tetrisEngine\"] = factory();\n\telse\n\t\troot[\"tetrisEngine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Shape from './shape'\r\nimport GAME_STATUS from './game-status'\r\n\r\nimport tetraShapes from './tetra-shapes'\r\n\r\n/**\r\n * Implements the engine of a game\r\n */\r\n\r\nexport default class Engine {\r\n\r\n  /**\r\n   * Initializing new area\r\n   * @param {Object} options is the container for following options:\r\n   * @param {number} height is the width of the field of the game in squares\r\n   * @param {number} width is the height of the field of the game in squares\r\n   * @param {function} renderHandle The method that will be runned every time\r\n   *                   when game state will be changed. Receives game render data.\r\n   * @param {Array} defaultHeap is a default heap for a game\r\n   * @param {Object} additionalShapes is additionalShapes for a custom game\r\n   */\r\n  constructor(options) {\r\n    if(!options)\r\n      throw new Error('Options not defined')\r\n\r\n    if(!options.width || !options.height)\r\n      throw new Error('Size parameters of the game field are incorrect')\r\n\r\n    if(!options.renderHandle || typeof options.renderHandle !== 'function')\r\n      throw new Error('renderHandle not defined!')\r\n\r\n    let self = this\r\n    this.width = options.width\r\n    this.height = options.height\r\n\r\n    if(!options.players)\r\n      this.players = {\r\n        'Player': {\r\n          stat: this._newStatistic()\r\n        }\r\n      }\r\n    else {\r\n      this.players = {}\r\n      for(let i = 0; i < options.players.length; i++) {\r\n        let player = options.players[i]\r\n        if(this.players[player])\r\n          throw new Error('multiple user name!')\r\n        else\r\n          this.players[player] = {\r\n            name: player,\r\n            stat: self._newStatistic()\r\n          }\r\n      }\r\n    }\r\n\r\n    this._renderHandle = options.renderHandle\r\n\r\n    this._shapesSet = {}\r\n    for(let key in tetraShapes)\r\n      this._shapesSet[key] = tetraShapes[key]\r\n\r\n    if(options.additionalShapes)\r\n      for(let key in options.additionalShapes)\r\n        this._shapesSet[key] = options.additionalShapes[key]\r\n\r\n    this._gameStatus = GAME_STATUS.INIT\r\n\r\n    this._statistic = this._newStatistic()\r\n\r\n    this._heap = []\r\n    if(options.defaultHeap && options.defaultHeap.length && options.defaultHeap[0].length) {\r\n      for(let y = 0; y < options.defaultHeap.length; y++) {\r\n        let row = []\r\n        for(let x = 0; x < this.width; x++) {\r\n          row.push({\r\n            val: 0\r\n          })\r\n        }\r\n        this._heap.push(row)\r\n      }\r\n\r\n      let inversedDefaultHeap = options.defaultHeap.slice().reverse()\r\n      for(let y = 0; y < inversedDefaultHeap.length && y < this.height; y++) {\r\n        let row = inversedDefaultHeap[y]\r\n        for(let x = 0; x < row.length && x < this.width; x++) {\r\n          this._heap[y][x].val = inversedDefaultHeap[y][x]\r\n        }\r\n      }\r\n    }\r\n\r\n    this._checkHeapForReduce()\r\n\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  _newStatistic() {\r\n    return {\r\n      countShapesFalled: 0,\r\n      countShapesFalledByType: {},\r\n      countLinesReduced: 0,\r\n      countDoubleLinesReduced: 0,\r\n      countTrippleLinesReduced: 0,\r\n      countQuadrupleLinesReduced: 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new Shape\r\n   * @param {*} playerName is name of player, who need receive new shape\r\n   * @returns {void}\r\n   */\r\n  _newFigure(playerName = null) {\r\n\r\n\r\n    for (let name in this.players) {\r\n      if(!playerName || name === playerName) {\r\n        let player = this.players[name]\r\n        player.shape = player.nextShape ? player.nextShape : new Shape(this._shapesSet, parseInt(this.width / 2 - 3), this.height)\r\n        player.nextShape = new Shape(this._shapesSet, parseInt(this.width / 2 - 3), this.height)\r\n\r\n        let countShapesFalledByType = player.stat.countShapesFalledByType[player.shape.name]\r\n        if(!countShapesFalledByType)\r\n          player.stat._statistic.countShapesFalledByType[player.shape.name] = 1\r\n        else\r\n          player.stat._statistic.countShapesFalledByType[player.shape.name]++\r\n\r\n\r\n        player.stat.countShapesFalled++\r\n\r\n        countShapesFalledByType = this._statistic.countShapesFalledByType[player.shape.name]\r\n        if(!countShapesFalledByType)\r\n          this._statistic.countShapesFalledByType[player.shape.name] = 1\r\n        else\r\n          this._statistic.countShapesFalledByType[player.shape.name]++\r\n\r\n        this._statistic.countShapesFalled++\r\n      }\r\n    }\r\n    //this._shape = this._nextShape ? this._nextShape : new Shape(this._shapesSet, parseInt(this.width / 2 - 3), this.height)\r\n    //this._nextShape = new Shape(this._shapesSet, parseInt(this.width / 2 - 3), this.height)\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Running a game or turn off a pause mode\r\n   * @returns {void}\r\n   */\r\n  start() {\r\n    if(this._gameStatus !== GAME_STATUS.INIT && this._gameStatus !== GAME_STATUS.PAUSE)\r\n      return false\r\n\r\n    if(this._gameStatus === GAME_STATUS.INIT) {\r\n      this._newFigure()\r\n      this._gameStatus = GAME_STATUS.WORK\r\n      return true\r\n    }\r\n\r\n    if(this._gameStatus === GAME_STATUS.PAUSE) {\r\n      this._gameStatus = GAME_STATUS.WORK\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Turn on a pause mode\r\n   * @returns {void}\r\n   */\r\n  pause() {\r\n    switch(this._gameStatus) {\r\n    case GAME_STATUS.WORK:\r\n      this._gameStatus = GAME_STATUS.PAUSE\r\n      break\r\n    case GAME_STATUS.PAUSE:\r\n      this._gameStatus = GAME_STATUS.WORK\r\n      break\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    if(this._gameStatus !== GAME_STATUS.WORK)\r\n      return\r\n\r\n    if(!this._canShapeMove(0, -1))\r\n      return\r\n\r\n    this._shape.position.X--\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  moveRight() {\r\n    if(this._gameStatus !== GAME_STATUS.WORK)\r\n      return\r\n\r\n    if(!this._canShapeMove(0, 1))\r\n      return\r\n\r\n    this._shape.position.X++\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  moveUp() {\r\n    if(this._gameStatus !== GAME_STATUS.WORK)\r\n      return\r\n\r\n    if(!this._canShapeMove(1, 0))\r\n      return\r\n\r\n    this._shape.position.Y++\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  moveDown() {\r\n    if(this._gameStatus !== GAME_STATUS.WORK)\r\n      return\r\n\r\n    if(!this._canShapeMove(-1, 0)) {\r\n      if(!this._addShapeToHeap()) {\r\n        this._gameStatus = GAME_STATUS.OVER\r\n        this._renderHandle(this.state)\r\n      }\r\n      return\r\n    }\r\n\r\n\r\n    this._shape.position.Y--\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  _addShapeToHeap() {\r\n    let newRowForHeap = []\r\n    for(let i = 0; i < this.width; i++)\r\n      newRowForHeap.push({\r\n        val: 0\r\n      })\r\n\r\n    for(let y = ShapeDimension - 1; y >= 0; y--) {\r\n      let row = this._shape.body[y]\r\n      for(let x = 0; x < ShapeDimension; x++) {\r\n        let cell = row[x]\r\n        if(cell) {\r\n          let areaIndexY = this._getAreaIndexYFromShape(y)\r\n\r\n          if(areaIndexY >= this.height) {\r\n            //game over :)\r\n            return false\r\n          }\r\n\r\n          while(areaIndexY >= this._heap.length) {\r\n            this._heap.push(newRowForHeap.slice())\r\n          }\r\n\r\n          let areaIndexX = this._getAreaIndexXFromShape(x)\r\n          this._heap[areaIndexY][areaIndexX] = {\r\n            val: 1,\r\n            class: this._shape.name\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this._checkHeapForReduce()\r\n\r\n    this._newFigure()\r\n    this._renderHandle(this.state)\r\n\r\n    return true\r\n  }\r\n\r\n  _checkHeapForReduce() {\r\n    let linesToRemove = []\r\n    for(let y = this._heap.length - 1; y >= 0; y--) {\r\n      let row = this._heap[y]\r\n      let isThereEmptySquare = false\r\n      for(let x = 0; x < row.length; x++) {\r\n        if(!this._heap[y][x].val) {\r\n          isThereEmptySquare = true\r\n          break\r\n        }\r\n      }\r\n\r\n      if(!isThereEmptySquare)\r\n        linesToRemove.push(y)\r\n    }\r\n\r\n    let newHeap = []\r\n    for (let y = 0; y < this._heap.length; y++) {\r\n      if(linesToRemove.indexOf(y) === -1)\r\n        newHeap.push(this._heap[y])\r\n    }\r\n\r\n    this._statistic.countLinesReduced += linesToRemove.length\r\n    switch(linesToRemove.length) {\r\n    case 2:\r\n      this._statistic.countDoubleLinesReduced++\r\n      break\r\n    case 3:\r\n      this._statistic.countTrippleLinesReduced++\r\n      break\r\n    case 4:\r\n      this._statistic.countQuadrupleLinesReduced++\r\n      break\r\n    }\r\n\r\n    this._heap = newHeap\r\n  }\r\n\r\n  rotate() {\r\n    if(this._gameStatus !== GAME_STATUS.WORK)\r\n      return\r\n\r\n    if(!this._canShapeMove(0, 0, this._shape.getRotatedBody()))\r\n      return\r\n\r\n    this._shape.rotate()\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  rotateBack() {\r\n    if(this._gameStatus !== GAME_STATUS.WORK)\r\n      return\r\n\r\n    if(!this._canShapeMove(0, 0, this._shape.getRotatedBackBody()))\r\n      return\r\n\r\n    this._shape.rotateBack()\r\n    this._renderHandle(this.state)\r\n  }\r\n\r\n  _getShapeIndexX(x) {\r\n    return x - this._shape.position.X\r\n  }\r\n\r\n  _getShapeIndexY(y) {\r\n    return this._shape.position.Y + (ShapeDimension - 1) - y\r\n  }\r\n\r\n  _getAreaIndexXFromShape(shapeX, delta = 0) {\r\n    return shapeX + this._shape.position.X + delta\r\n  }\r\n\r\n  _getAreaIndexYFromShape(shapeY, delta = 0) {\r\n    return this._shape.position.Y + (ShapeDimension - 1) - shapeY + delta\r\n  }\r\n\r\n  /**\r\n   * Specifies that can a shape move.\r\n   * If new coordinates of shape overlap with coordinates of heap\r\n   * or are outside the game area the shape can't move\r\n   * @param {*} deltaY specifies vertical moving distance\r\n   * @param {*} deltaX specifies horizontal moving distance\r\n   * @param {*} shapeBody specifies changed body of a shape, for example rotated body\r\n   * @returns {Boolean} True - shape can moves id parametrized direction, False - shape cannot move\r\n   */\r\n  _canShapeMove(deltaY, deltaX, shapeBody) {\r\n    if(!shapeBody)\r\n      shapeBody = this._shape.body\r\n\r\n    for(let y = 0; y < shapeBody.length; y++) {\r\n      let row = shapeBody[y]\r\n      let areaIndexY = this._getAreaIndexYFromShape(y, deltaY)\r\n\r\n      for(let x = 0; x < row.length; x++) {\r\n        let cell = row[x]\r\n        if(cell) {\r\n          let areaIndexX = this._getAreaIndexXFromShape(x, deltaX)\r\n\r\n          //check will the shape go over the walls and the ground\r\n          if(areaIndexY < 0 || areaIndexX < 0 || areaIndexX >= this.width)\r\n            return false\r\n\r\n          if(this._isHeapSquare(areaIndexY, areaIndexX ))\r\n            return false\r\n        }\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  setNextShape(key) {\r\n    switch(key) {\r\n    case 'i':\r\n      this._nextShape = new Shape(this._shapesSet)\r\n      this._nextShape._shape = this._shapesSet[\"IShape\"].slice()\r\n      break\r\n    case 'o':\r\n      this._nextShape = new Shape(this._shapesSet)\r\n      this._nextShape._shape = this._shapesSet[\"OShape\"].slice()\r\n      break\r\n    }\r\n  }\r\n\r\n  _isShapeSquare(y, x) {\r\n    if(!this._shape || !this._shape.body)\r\n      return false\r\n    let row = this._shape.body[this._getShapeIndexY(y)]\r\n    return row && row[this._getShapeIndexX(x)]\r\n  }\r\n\r\n  _isHeapSquare(y, x) {\r\n    if(!this._heap)\r\n      return false\r\n\r\n    return this._heap[y] && this._heap[y][x].val\r\n  }\r\n\r\n  _getHeapClass(y, x) {\r\n    if(!this._heap)\r\n      return\r\n\r\n    if(!this._heap[y] || !this._heap[y][x].val)\r\n      return\r\n\r\n    return this._heap[y][x].class\r\n  }\r\n\r\n  _getBody() {\r\n    let body = []\r\n    for (let y = this.height - 1; y >= 0; y--) {\r\n      let row = []\r\n      for (let x = 0; x < this.width; x++) {\r\n        let isHeap = this._isHeapSquare(y, x)\r\n        let isShape = this._isShapeSquare(y, x)\r\n        let val = isHeap ? 2 : isShape ? 1 : 0\r\n\r\n        if(!isShape && !isHeap) {\r\n          row.push(0)\r\n        }\r\n        else {\r\n\r\n          let newCell = {\r\n            val: val\r\n          }\r\n\r\n          let css = []\r\n          if(isShape) {\r\n            css.push('shape')\r\n            css.push(this._shape.name)\r\n          }\r\n\r\n          if(isHeap) {\r\n            css.push('heap')\r\n            let heapClass = this._getHeapClass(y, x)\r\n            if(heapClass)\r\n              css.push(heapClass)\r\n          }\r\n\r\n          if(css.length) {\r\n            newCell.css = css\r\n          }\r\n\r\n          row.push(newCell)\r\n        }\r\n      }\r\n      body.push(row)\r\n\r\n    }\r\n    return body\r\n  }\r\n\r\n  get state() {\r\n    return {\r\n      gameStatus: this._gameStatus,\r\n      body: this._getBody(),\r\n      shapeName: this._shape ? this._shape.name : null,\r\n      nextShape: {\r\n        name: this._nextShape ? this._nextShape.name : null,\r\n        body: this._nextShape ? this._nextShape.bodyWithAppearance : null,\r\n      },\r\n      statistic: this._statistic\r\n    }\r\n  }\r\n}\r\n\r\n","/**\r\n * Enum represents status of a game\r\n *\r\n * INIT - game was not started\r\n * WORK - game is running\r\n * PAUSE - game was temporary stopped\r\n * OVER - game was finished\r\n */\r\nexport default {\r\n  INIT: 0,\r\n  WORK: 1,\r\n  PAUSE: 2,\r\n  OVER: 3\r\n}","import Engine from './engine'\r\nimport TetraShapes from './tetra-shapes'\r\nimport GameStatus from './game-status'\r\n\r\nexport { Engine, TetraShapes, GameStatus }","/**\r\n * Max dimension of every shape\r\n */\r\nconst ShapeDimension = 5\r\n\r\n/**\r\n * Implements a falling shape\r\n */\r\nexport default class Shape {\r\n  constructor(shapesSet, X = 5, Y = 12) {\r\n    if(!shapesSet)\r\n      throw new Error('Set of shapes was not setted!')\r\n\r\n    this._shape = this._selectNextShape(shapesSet)\r\n\r\n    this.position = {\r\n      X: X,\r\n      Y: Y\r\n    }\r\n\r\n    this.ShapeDimension = 5\r\n\r\n    this._calculateProperties()\r\n  }\r\n\r\n  /**\r\n      * Selecting next shape from the available set of shapes\r\n      * @param {Object} shapesSet is set of shapes among that need to select\r\n      * @returns {Array} next shape from shapesSet\r\n      * @private\r\n      */\r\n  _selectNextShape(shapesSet) {\r\n    let count = 0\r\n    let selectedShape\r\n    for (let prop in shapesSet) {\r\n      if (Math.random() < 1 / ++count)\r\n        selectedShape = prop\r\n    }\r\n\r\n    this.name = selectedShape\r\n\r\n    return shapesSet[selectedShape]\r\n  }\r\n\r\n  /**\r\n      * Calculating all properties that change when a shape is rotated\r\n      * @private\r\n      * @returns {void}\r\n      */\r\n  _calculateProperties() {\r\n    this._calculatePaddings()\r\n  }\r\n\r\n  /**\r\n    * Calculating paddings\r\n    * @returns {void}\r\n  */\r\n  _calculatePaddings() {\r\n    let paddingLeft = ShapeDimension\r\n    let paddingRight = ShapeDimension\r\n    let paddingTop = -1\r\n    let paddingBottom = -1\r\n\r\n    for (let y = 0; y < ShapeDimension; y++) {\r\n      for (let x = 0; x < ShapeDimension; x++) {\r\n        if (this._shape[y][x]) {\r\n          if (paddingLeft > x)\r\n            paddingLeft = x\r\n\r\n          if (paddingTop < 0)\r\n            paddingTop = y\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let y = ShapeDimension - 1; y >= 0; y--) {\r\n      for (let x = ShapeDimension - 1; x >= 0; x--) {\r\n        if (this._shape[y][x]) {\r\n          if (paddingRight > ShapeDimension - 1 - x)\r\n            paddingRight = ShapeDimension - 1 - x\r\n\r\n          if (paddingBottom < 0)\r\n            paddingBottom = ShapeDimension - 1 - y\r\n        }\r\n      }\r\n    }\r\n\r\n    this._paddingLeft = paddingLeft\r\n    this._paddingRight = paddingRight\r\n    this._paddingTop = paddingTop\r\n    this._paddingBottom = paddingBottom\r\n  }\r\n\r\n  /**\r\n      * rotating a shape clockwise\r\n      * @public\r\n      * @returns {void}\r\n      */\r\n  rotate() {\r\n    this._shape = this.getRotatedBody()\r\n    this._calculateProperties()\r\n  }\r\n\r\n  getRotatedBody() {\r\n    let newShape = []\r\n\r\n    for (let x = 0; x < ShapeDimension; x++) {\r\n      let newRow = []\r\n      for (let y = ShapeDimension - 1; y >= 0; y--) {\r\n        newRow.push(this._shape[y][x])\r\n      }\r\n      newShape.push(newRow)\r\n    }\r\n\r\n    return newShape\r\n  }\r\n\r\n  /**\r\n      * rotating a shape counterclockwise\r\n      * @public\r\n      * @returns {void}\r\n      */\r\n  rotateBack() {\r\n    this._shape = this.getRotatedBackBody()\r\n    this._calculateProperties()\r\n  }\r\n\r\n  getRotatedBackBody() {\r\n    let newShape = []\r\n    for (let x = ShapeDimension - 1; x >= 0; x--) {\r\n      let newRow = []\r\n      for (let y = 0; y < ShapeDimension; y++) {\r\n        newRow.push(this._shape[y][x])\r\n      }\r\n      newShape.push(newRow)\r\n    }\r\n\r\n    return newShape\r\n  }\r\n\r\n  /**\r\n      * getting actual shape body\r\n      * @public\r\n      */\r\n  get body() {\r\n    return this._shape\r\n  }\r\n\r\n  get bodyWithAppearance() {\r\n    let body = []\r\n\r\n    for (let x = ShapeDimension - 1; x >= 0; x--) {\r\n      let newRow = []\r\n      for (let y = 0; y < ShapeDimension; y++) {\r\n\r\n        let newCell = {\r\n          val: this._shape[y][x]\r\n        }\r\n\r\n        if(this._shape[y][x])\r\n          newCell.css = 'shape ' + this.name\r\n\r\n        newRow.push(newCell)\r\n      }\r\n      body.push(newRow)\r\n    }\r\n\r\n    return body\r\n  }\r\n\r\n  /**\r\n      * getting top padding for shape relatively shape's border\r\n      * @public\r\n      */\r\n  get paddingTop() {\r\n    return this._paddingTop\r\n  }\r\n\r\n  /**\r\n      * getting bottom padding for shape relatively shape's border\r\n      * @public\r\n      */\r\n  get paddingBottom() {\r\n    return this._paddingBottom\r\n  }\r\n\r\n  /**\r\n      * getting right padding for shape relatively shape's border\r\n      * @public\r\n      */\r\n  get paddingRight() {\r\n    return this._paddingRight\r\n  }\r\n\r\n  /**\r\n      * getting left padding for shape relatively shape's border\r\n      * @public\r\n      */\r\n  get paddingLeft() {\r\n    return this._paddingLeft\r\n  }\r\n}\r\n","export default {\r\n  IShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ],\r\n  ZShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 1, 1, 0, 0],\r\n    [0, 0, 1, 1, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ],\r\n  SShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 1, 1, 0],\r\n    [0, 1, 1, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ],\r\n  LShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 1, 1, 1, 0],\r\n    [0, 1, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ],\r\n  JShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 1, 1, 1, 0],\r\n    [0, 0, 0, 1, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ],\r\n  OShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 1, 1, 0, 0],\r\n    [0, 1, 1, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ],\r\n  TShape: [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n    [0, 1, 1, 1, 0],\r\n    [0, 0, 1, 0, 0],\r\n    [0, 0, 0, 0, 0],\r\n  ]\r\n}\r\n"],"sourceRoot":""}